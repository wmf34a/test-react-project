{
  "_from": "@testing-library/user-event@^12.1.10",
  "_id": "@testing-library/user-event@12.8.3",
  "_inBundle": false,
  "_integrity": "sha512-IR0iWbFkgd56Bu5ZI/ej8yQwrkCv8Qydx6RzwbKz9faXazR/+5tvYKsZQgyXJiwgpcva127YO6JcWy7YlCfofQ==",
  "_location": "/@testing-library/user-event",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@testing-library%2fuser-event",
    "fetchSpec": "^12.1.10",
    "name": "@testing-library/user-event",
    "raw": "@testing-library/user-event@^12.1.10",
    "rawSpec": "^12.1.10",
    "registry": true,
    "saveSpec": null,
    "scope": "@testing-library",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@testing-library/user-event/-/user-event-12.8.3.tgz",
  "_shasum": "1aa3ed4b9f79340a1e1836bc7f57c501e838704a",
  "_spec": "@testing-library/user-event@^12.1.10",
  "_where": "/root/test-react-project",
  "author": {
    "email": "polvara@gmail.com",
    "name": "Giorgio Polvara"
  },
  "bugs": {
    "url": "https://github.com/testing-library/user-event/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@babel/runtime": "^7.12.5"
  },
  "deprecated": false,
  "description": "Fire events the same way the user does",
  "devDependencies": {
    "@testing-library/dom": "^7.28.1",
    "@testing-library/jest-dom": "^5.11.6",
    "@types/estree": "0.0.45",
    "is-ci": "^2.0.0",
    "jest-serializer-ansi": "^1.0.3",
    "kcd-scripts": "^7.5.1",
    "typescript": "^4.1.2"
  },
  "engines": {
    "node": ">=10",
    "npm": ">=6"
  },
  "eslintConfig": {
    "extends": "./node_modules/kcd-scripts/eslint.js",
    "overrides": [
      {
        "files": [
          "**/__tests__/**"
        ],
        "rules": {
          "no-console": "off"
        }
      }
    ],
    "rules": {
      "jsx-a11y/click-events-have-key-events": "off",
      "jsx-a11y/tabindex-no-positive": "off",
      "no-func-assign": "off",
      "no-return-assign": "off",
      "react/prop-types": "off",
      "testing-library/no-dom-import": "off"
    }
  },
  "eslintIgnore": [
    "coverage",
    "dist",
    "node_modules"
  ],
  "files": [
    "dist",
    "typings/index.d.ts"
  ],
  "homepage": "https://github.com/testing-library/user-event#readme",
  "keywords": [
    "dom-testing-library",
    "react",
    "react-testing-library",
    "testing"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "name": "@testing-library/user-event",
  "optionalDependencies": {},
  "peerDependencies": {
    "@testing-library/dom": ">=7.21.4"
  },
  "readme": "<div align=\"center\">\n<h1>@testing-library/user-event</h1>\n\n<a href=\"https://www.joypixels.com/profiles/emoji/1f415\">\n  <img\n    height=\"80\"\n    width=\"80\"\n    alt=\"dog\"\n    src=\"https://raw.githubusercontent.com/testing-library/user-event/master/other/dog.png\"\n  />\n</a>\n\n<p>Fire events the same way the user does</p>\n</div>\n\n---\n\n<!-- prettier-ignore-start -->\n[![Build Status][build-badge]][build]\n[![Code Coverage][coverage-badge]][coverage]\n[![version][version-badge]][package]\n[![downloads][downloads-badge]][npmtrends]\n[![MIT License][license-badge]][license]\n[![All Contributors][all-contributors-badge]](#contributors)\n[![PRs Welcome][prs-badge]][prs]\n[![Code of Conduct][coc-badge]][coc]\n<!-- prettier-ignore-end -->\n\n## The problem\n\nFrom\n[testing-library/dom-testing-library#107](https://github.com/testing-library/dom-testing-library/issues/107):\n\n> [...] it is becoming apparent the need to express user actions on a web page\n> using a higher-level abstraction than `fireEvent`\n\n## The solution\n\n`user-event` tries to simulate the real events that would happen in the browser\nas the user interacts with it. For example `userEvent.click(checkbox)` would\nchange the state of the checkbox.\n\n**The library is still a work in progress and any help is appreciated.**\n\n## Table of Contents\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n- [API](#api)\n  - [`click(element, eventInit, options)`](#clickelement-eventinit-options)\n  - [`dblClick(element, eventInit, options)`](#dblclickelement-eventinit-options)\n  - [`type(element, text, [options])`](#typeelement-text-options)\n  - [`upload(element, file, [{ clickInit, changeInit }])`](#uploadelement-file--clickinit-changeinit-)\n  - [`clear(element)`](#clearelement)\n  - [`selectOptions(element, values)`](#selectoptionselement-values)\n  - [`deselectOptions(element, values)`](#deselectoptionselement-values)\n  - [`tab({shift, focusTrap})`](#tabshift-focustrap)\n  - [`hover(element)`](#hoverelement)\n  - [`unhover(element)`](#unhoverelement)\n  - [`paste(element, text, eventInit, options)`](#pasteelement-text-eventinit-options)\n  - [`specialChars`](#specialchars)\n- [Issues](#issues)\n  - [üêõ Bugs](#-bugs)\n  - [üí° Feature Requests](#-feature-requests)\n- [Contributors ‚ú®](#contributors-)\n- [LICENSE](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nWith NPM:\n\n```sh\nnpm install @testing-library/user-event @testing-library/dom --save-dev\n```\n\nWith Yarn:\n\n```sh\nyarn add @testing-library/user-event @testing-library/dom --dev\n```\n\nNow simply import it in your tests:\n\n```js\nimport userEvent from '@testing-library/user-event'\n\n// or\n\nconst {default: userEvent} = require('@testing-library/user-event')\n```\n\n## API\n\nNote: All userEvent methods are synchronous with one exception: when `delay`\nwith `userEvent.type` as described below). We also discourage using `userEvent`\ninside `before/after` blocks at all, for important reasons described in\n[\"Avoid Nesting When You're Testing\"](https://kentcdodds.com/blog/avoid-nesting-when-youre-testing).\n\n### `click(element, eventInit, options)`\n\nClicks `element`, depending on what `element` is it can have different side\neffects.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('click', () => {\n  render(\n    <div>\n      <label htmlFor=\"checkbox\">Check</label>\n      <input id=\"checkbox\" type=\"checkbox\" />\n    </div>,\n  )\n\n  userEvent.click(screen.getByText('Check'))\n  expect(screen.getByLabelText('Check')).toBeChecked()\n})\n```\n\nYou can also ctrlClick / shiftClick etc with\n\n```js\nuserEvent.click(elem, {ctrlKey: true, shiftKey: true})\n```\n\nSee the\n[`MouseEvent`](https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent)\nconstructor documentation for more options.\n\nNote that `click` will trigger hover events before clicking. To disable this,\nset the `skipHover` option to `true`.\n\n### `dblClick(element, eventInit, options)`\n\nClicks `element` twice, depending on what `element` is it can have different\nside effects.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('double click', () => {\n  const onChange = jest.fn()\n  render(<input type=\"checkbox\" onChange={onChange} />)\n  const checkbox = screen.getByRole('checkbox')\n  userEvent.dblClick(checkbox)\n  expect(onChange).toHaveBeenCalledTimes(2)\n  expect(checkbox).not.toBeChecked()\n})\n```\n\n### `type(element, text, [options])`\n\nWrites `text` inside an `<input>` or a `<textarea>`.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('type', () => {\n  render(<textarea />)\n\n  userEvent.type(screen.getByRole('textbox'), 'Hello,{enter}World!')\n  expect(screen.getByRole('textbox')).toHaveValue('Hello,\\nWorld!')\n})\n```\n\n`options.delay` is the number of milliseconds that pass between two characters\nare typed. By default it's 0. You can use this option if your component has a\ndifferent behavior for fast or slow users. If you do this, you need to make sure\nto `await`!\n\n> To be clear, `userEvent.type` _always_ returns a promise, but you _only_ need\n> to `await` the promise it returns if you're using the `delay` option.\n> Otherwise everything runs synchronously and you can ignore the promise.\n\n`type` will click the element before typing. To disable this, set the\n`skipClick` option to `true`.\n\n#### Special characters\n\nThe following special character strings are supported:\n\n| Text string    | Key        | Modifier           | Notes                                                                                                                                                               |\n| -------------- | ---------- | ------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `{enter}`      | Enter      | N/A                | Will insert a newline character (`<textarea />` only).                                                                                                              |\n| `{space}`      | `' '`      | N/A                |                                                                                                                                                                     |\n| `{esc}`        | Escape     | N/A                |                                                                                                                                                                     |\n| `{backspace}`  | Backspace  | N/A                | Will delete the previous character (or the characters within the `selectedRange`, see example below).                                                               |\n| `{del}`        | Delete     | N/A                | Will delete the next character (or the characters within the `selectedRange`, see example below)                                                                    |\n| `{selectall}`  | N/A        | N/A                | Selects all the text of the element. Note that this will only work for elements that support selection ranges (so, not `email`, `password`, `number`, among others) |\n| `{arrowleft}`  | ArrowLeft  | N/A                |                                                                                                                                                                     |\n| `{arrowright}` | ArrowRight | N/A                |                                                                                                                                                                     |\n| `{arrowup}`    | ArrowUp    | N/A                |                                                                                                                                                                     |\n| `{arrowdown}`  | ArrowDown  | N/A                |                                                                                                                                                                     |\n| `{home}`       | Home       | N/A                |                                                                                                                                                                     |\n| `{end}`        | End        | N/A                |                                                                                                                                                                     |\n| `{shift}`      | Shift      | `shiftKey`         | Does **not** capitalize following characters.                                                                                                                       |\n| `{ctrl}`       | Control    | `ctrlKey`          |                                                                                                                                                                     |\n| `{alt}`        | Alt        | `altKey`           |                                                                                                                                                                     |\n| `{meta}`       | OS         | `metaKey`          |                                                                                                                                                                     |\n| `{capslock}`   | CapsLock   | `modifierCapsLock` | Fires both keydown and keyup when used (simulates a user clicking their \"Caps Lock\" button to enable caps lock).                                                    |\n\n> **A note about modifiers:** Modifier keys (`{shift}`, `{ctrl}`, `{alt}`,\n> `{meta}`) will activate their corresponding event modifiers for the duration\n> of type command or until they are closed (via `{/shift}`, `{/ctrl}`, etc.). If\n> they are not closed explicitly, then events will be fired to close them\n> automatically (to disable this, set the `skipAutoClose` option to `true`).\n\n<!-- space out these notes -->\n\n> We take the same\n> [stance as Cypress](https://docs.cypress.io/api/commands/type.html#Modifiers)\n> in that we do not simulate the behavior that happens with modifier key\n> combinations as different operating systems function differently in this\n> regard.\n\nAn example of an usage with a selection range:\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('delete characters within the selectedRange', () => {\n  render(\n    <div>\n      <label htmlFor=\"my-input\">Example:</label>\n      <input id=\"my-input\" type=\"text\" value=\"This is a bad example\" />\n    </div>,\n  )\n  const input = screen.getByLabelText(/example/i)\n  input.setSelectionRange(10, 13)\n  userEvent.type(input, '{backspace}good')\n\n  expect(input).toHaveValue('This is a good example')\n})\n```\n\n#### <input type=\"time\" /> support\n\nThe following is an example of usage of this library with\n`<input type=\"time\" />`\n\n```jsx\nimport React from 'react\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('types into the input', () => {\n  render(\n    <>\n      <label for=\"time\">Enter a time</label>\n      <input\n        type=\"time\"\n        id=\"time\"\n      />\n    </>\n  )\n  const input = screen.getByLabelText(/enter a time/i)\n  userEvent.type(input, '13:58')\n  expect(input.value).toBe('13:58')\n})\n```\n\n### `upload(element, file, [{ clickInit, changeInit }], [options])`\n\nUploads file to an `<input>`. For uploading multiple files use `<input>` with\n`multiple` attribute and the second `upload` argument must be array then. Also\nit's possible to initialize click or change event with using third argument.\n\nIf `options.applyAccept` is set to `true` and there is an `accept` attribute on\nthe element, files that don't match will be discarded.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('upload file', () => {\n  const file = new File(['hello'], 'hello.png', {type: 'image/png'})\n\n  render(\n    <div>\n      <label htmlFor=\"file-uploader\">Upload file:</label>\n      <input id=\"file-uploader\" type=\"file\" />\n    </div>,\n  )\n  const input = screen.getByLabelText(/upload file/i)\n  userEvent.upload(input, file)\n\n  expect(input.files[0]).toStrictEqual(file)\n  expect(input.files.item(0)).toStrictEqual(file)\n  expect(input.files).toHaveLength(1)\n})\n\ntest('upload multiple files', () => {\n  const files = [\n    new File(['hello'], 'hello.png', {type: 'image/png'}),\n    new File(['there'], 'there.png', {type: 'image/png'}),\n  ]\n\n  render(\n    <div>\n      <label htmlFor=\"file-uploader\">Upload file:</label>\n      <input id=\"file-uploader\" type=\"file\" multiple />\n    </div>,\n  )\n  const input = screen.getByLabelText(/upload file/i)\n  userEvent.upload(input, files)\n\n  expect(input.files).toHaveLength(2)\n  expect(input.files[0]).toStrictEqual(files[0])\n  expect(input.files[1]).toStrictEqual(files[1])\n})\n```\n\n### `clear(element)`\n\nSelects the text inside an `<input>` or `<textarea>` and deletes it.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('clear', () => {\n  render(<textarea value=\"Hello, World!\" />)\n\n  userEvent.clear(screen.getByRole('textbox', 'email'))\n  expect(screen.getByRole('textbox', 'email')).toHaveAttribute('value', '')\n})\n```\n\n### `selectOptions(element, values)`\n\nSelects the specified option(s) of a `<select>` or a `<select multiple>`\nelement.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('selectOptions', () => {\n  render(\n    <select multiple data-testid=\"select-multiple\">\n      <option data-testid=\"val1\" value=\"1\">\n        A\n      </option>\n      <option data-testid=\"val2\" value=\"2\">\n        B\n      </option>\n      <option data-testid=\"val3\" value=\"3\">\n        C\n      </option>\n    </select>,\n  )\n\n  userEvent.selectOptions(screen.getByTestId('select-multiple'), ['1', '3'])\n\n  expect(screen.getByTestId('val1').selected).toBe(true)\n  expect(screen.getByTestId('val2').selected).toBe(false)\n  expect(screen.getByTestId('val3').selected).toBe(true)\n})\n```\n\nThe `values` parameter can be either an array of values or a singular scalar\nvalue.\n\nIt also accepts option nodes:\n\n```js\nuserEvent.selectOptions(screen.getByTestId('select-multiple'), [\n  screen.getByText('A'),\n  screen.getByText('B'),\n])\n```\n\n### `deselectOptions(element, values)`\n\nRemove the selection for the specified option(s) of a `<select multiple>`\nelement.\n\n```jsx\nimport * as React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\ntest('deselectOptions', () => {\n  render(\n    <select multiple>\n      <option value=\"1\">A</option>\n      <option value=\"2\">B</option>\n      <option value=\"3\">C</option>\n    </select>,\n  )\n\n  userEvent.selectOptions(screen.getByRole('listbox'), '2')\n  expect(screen.getByText('B').selected).toBe(true)\n  userEvent.deselectOptions(screen.getByRole('listbox'), '2')\n  expect(screen.getByText('B').selected).toBe(false)\n  // can do multiple at once as well:\n  // userEvent.deselectOptions(screen.getByRole('listbox'), ['1', '2'])\n})\n```\n\nThe `values` parameter can be either an array of values or a singular scalar\nvalue.\n\n### `tab({shift, focusTrap})`\n\nFires a tab event changing the document.activeElement in the same way the\nbrowser does.\n\nOptions:\n\n- `shift` (default `false`) can be true or false to invert tab direction.\n- `focusTrap` (default `document`) a container element to restrict the tabbing\n  within.\n\n> **A note about tab**:\n> [jsdom does not support tabbing](https://github.com/jsdom/jsdom/issues/2102),\n> so this feature is a way to enable tests to verify tabbing from the end user's\n> perspective. However, this limitation in jsdom will mean that components like\n> [focus-trap-react](https://github.com/davidtheclark/focus-trap-react) will not\n> work with `userEvent.tab()` or jsdom. For that reason, the `focusTrap` option\n> is available to let you ensure your user is restricted within a focus-trap.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport '@testing-library/jest-dom/extend-expect'\nimport userEvent from '@testing-library/user-event'\n\nit('should cycle elements in document tab order', () => {\n  render(\n    <div>\n      <input data-testid=\"element\" type=\"checkbox\" />\n      <input data-testid=\"element\" type=\"radio\" />\n      <input data-testid=\"element\" type=\"number\" />\n    </div>,\n  )\n\n  const [checkbox, radio, number] = screen.getAllByTestId('element')\n\n  expect(document.body).toHaveFocus()\n\n  userEvent.tab()\n\n  expect(checkbox).toHaveFocus()\n\n  userEvent.tab()\n\n  expect(radio).toHaveFocus()\n\n  userEvent.tab()\n\n  expect(number).toHaveFocus()\n\n  userEvent.tab()\n\n  // cycle goes back to the body element\n  expect(document.body).toHaveFocus()\n\n  userEvent.tab()\n\n  expect(checkbox).toHaveFocus()\n})\n```\n\n### `hover(element)`\n\nHovers over `element`.\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\nimport Tooltip from '../tooltip'\n\ntest('hover', () => {\n  const messageText = 'Hello'\n  render(\n    <Tooltip messageText={messageText}>\n      <TrashIcon aria-label=\"Delete\" />\n    </Tooltip>,\n  )\n\n  userEvent.hover(screen.getByLabelText(/delete/i))\n  expect(screen.getByText(messageText)).toBeInTheDocument()\n  userEvent.unhover(screen.getByLabelText(/delete/i))\n  expect(screen.queryByText(messageText)).not.toBeInTheDocument()\n})\n```\n\n### `unhover(element)`\n\nUnhovers out of `element`.\n\n> See [above](#hoverelement) for an example\n\n### `paste(element, text, eventInit, options)`\n\nAllows you to simulate the user pasting some text into an input.\n\n```javascript\ntest('should paste text in input', () => {\n  render(<MyInput />)\n\n  const text = 'Hello, world!'\n  userEvent.paste(getByRole('textbox', {name: /paste your greeting/i}), text)\n  expect(element).toHaveValue(text)\n})\n```\n\nYou can use the `eventInit` if what you're pasting should have `clipboardData`\n(like `files`).\n\n### `specialChars`\n\nA handful set of special characters used in [type](#typeelement-text-options)\nmethod.\n\n| Key        | Character      |\n| ---------- | -------------- |\n| arrowLeft  | `{arrowleft}`  |\n| arrowRight | `{arrowright}` |\n| arrowDown  | `{arrowdown}`  |\n| arrowUp    | `{arrowup}`    |\n| home       | `{home}`       |\n| end        | `{end}`        |\n| enter      | `{enter}`      |\n| escape     | `{esc}`        |\n| delete     | `{del}`        |\n| backspace  | `{backspace}`  |\n| selectAll  | `{selectall}`  |\n| space      | `{space}`      |\n| whitespace | `' '`          |\n\nUsage example:\n\n```jsx\nimport React from 'react'\nimport {render, screen} from '@testing-library/react'\nimport userEvent, {specialChars} from '@testing-library/user-event'\n\ntest('delete characters within the selectedRange', () => {\n  render(\n    <div>\n      <label htmlFor=\"my-input\">Example:</label>\n      <input id=\"my-input\" type=\"text\" value=\"This is a bad example\" />\n    </div>,\n  )\n  const input = screen.getByLabelText(/example/i)\n  input.setSelectionRange(10, 13)\n  userEvent.type(input, `${specialChars.backspace}good`)\n\n  expect(input).toHaveValue('This is a good example')\n})\n```\n\n## Issues\n\n_Looking to contribute? Look for the [Good First Issue][good-first-issue]\nlabel._\n\n### üêõ Bugs\n\nPlease file an issue for bugs, missing documentation, or unexpected behavior.\n\n[**See Bugs**][bugs]\n\n### üí° Feature Requests\n\nPlease file an issue to suggest new features. Vote on feature requests by adding\na üëç. This helps maintainers prioritize what to work on.\n\n[**See Feature Requests**][requests]\n\n## Contributors ‚ú®\n\nThanks goes to these people ([emoji key][emojis]):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://twitter.com/Gpx\"><img src=\"https://avatars0.githubusercontent.com/u/767959?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Giorgio Polvara</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3AGpx\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=Gpx\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=Gpx\" title=\"Documentation\">üìñ</a> <a href=\"#ideas-Gpx\" title=\"Ideas, Planning, & Feedback\">ü§î</a> <a href=\"#infra-Gpx\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">üöá</a> <a href=\"https://github.com/testing-library/user-event/pulls?q=is%3Apr+reviewed-by%3AGpx\" title=\"Reviewed Pull Requests\">üëÄ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=Gpx\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/weyert\"><img src=\"https://avatars3.githubusercontent.com/u/7049?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Weyert de Boer</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=weyert\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=weyert\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/twhitbeck\"><img src=\"https://avatars2.githubusercontent.com/u/762471?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Tim Whitbeck</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Atwhitbeck\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=twhitbeck\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://michaeldeboey.be\"><img src=\"https://avatars3.githubusercontent.com/u/6643991?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Micha√´l De Boey</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=MichaelDeBoey\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/michaellasky\"><img src=\"https://avatars2.githubusercontent.com/u/6646599?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Michael Lasky</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=michaellasky\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=michaellasky\" title=\"Documentation\">üìñ</a> <a href=\"#ideas-michaellasky\" title=\"Ideas, Planning, & Feedback\">ü§î</a></td>\n    <td align=\"center\"><a href=\"https://github.com/shomalgan\"><img src=\"https://avatars0.githubusercontent.com/u/2883620?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ahmad Esmaeilzadeh</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=shomalgan\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://calebeby.ml\"><img src=\"https://avatars1.githubusercontent.com/u/13206945?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Caleb Eby</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=calebeby\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/issues?q=author%3Acalebeby\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/pulls?q=is%3Apr+reviewed-by%3Acalebeby\" title=\"Reviewed Pull Requests\">üëÄ</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://afontcu.dev\"><img src=\"https://avatars0.githubusercontent.com/u/9197791?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Adri√† Fontcuberta</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Aafontcu\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=afontcu\" title=\"Tests\">‚ö†Ô∏è</a> <a href=\"https://github.com/testing-library/user-event/commits?author=afontcu\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/skywickenden\"><img src=\"https://avatars2.githubusercontent.com/u/4930551?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sky Wickenden</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Askywickenden\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=skywickenden\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bogdanbodnar\"><img src=\"https://avatars2.githubusercontent.com/u/9034868?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Bodnar Bogdan</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Abogdanbodnar\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=bogdanbodnar\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://zach.website\"><img src=\"https://avatars0.githubusercontent.com/u/1699281?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Zach Perrault</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=zperrault\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/ryanastelly\"><img src=\"https://avatars1.githubusercontent.com/u/4138357?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ryan Stelly</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=FLGMwt\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/benmonro\"><img src=\"https://avatars3.githubusercontent.com/u/399236?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ben Monro</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=benmonro\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/GentlemanHal\"><img src=\"https://avatars2.githubusercontent.com/u/415521?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Christopher Martin</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=GentlemanHal\" title=\"Code\">üíª</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"http://fullgallop.me\"><img src=\"https://avatars0.githubusercontent.com/u/32252769?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Yuancheng Wu</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/pulls?q=is%3Apr+reviewed-by%3AYuanchengWu\" title=\"Reviewed Pull Requests\">üëÄ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/maheshjag\"><img src=\"https://avatars0.githubusercontent.com/u/1705603?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>MJ</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=maheshjag\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/jmcriffey\"><img src=\"https://avatars0.githubusercontent.com/u/2831294?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jeff McRiffey</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=jmcriffey\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=jmcriffey\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"http://jagascript.com\"><img src=\"https://avatars0.githubusercontent.com/u/4562878?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jaga Santagostino</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=kandros\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=kandros\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"http://jordy.app\"><img src=\"https://avatars3.githubusercontent.com/u/12712484?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>jordyvandomselaar</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=jordyvandomselaar\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=jordyvandomselaar\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://lyamkin.com\"><img src=\"https://avatars2.githubusercontent.com/u/3854930?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ilya Lyamkin</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=ilyamkin\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=ilyamkin\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"http://todofullstack.com\"><img src=\"https://avatars2.githubusercontent.com/u/4474353?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kenneth Luj√°n Rosas</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=klujanrosas\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=klujanrosas\" title=\"Tests\">‚ö†Ô∏è</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"http://thejoemorgan.com\"><img src=\"https://avatars1.githubusercontent.com/u/2388943?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Joe Morgan</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=jsmapr1\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/wachunga\"><img src=\"https://avatars0.githubusercontent.com/u/438545?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>David Hirtle</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=wachunga\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bdh1011\"><img src=\"https://avatars2.githubusercontent.com/u/8446067?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>whiteUnicorn</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=bdh1011\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://www.matej.snuderl.si/\"><img src=\"https://avatars3.githubusercontent.com/u/8524109?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Matej ≈†nuderl</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/pulls?q=is%3Apr+reviewed-by%3AMeemaw\" title=\"Reviewed Pull Requests\">üëÄ</a></td>\n    <td align=\"center\"><a href=\"https://pomb.us\"><img src=\"https://avatars1.githubusercontent.com/u/1911623?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Rodrigo Pombo</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=pomber\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"http://github.com/Raynos\"><img src=\"https://avatars3.githubusercontent.com/u/479538?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jake Verbaten</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=Raynos\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://skovy.dev\"><img src=\"https://avatars1.githubusercontent.com/u/5247455?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Spencer Miskoviak</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=skovy\" title=\"Documentation\">üìñ</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://proling.ru/\"><img src=\"https://avatars2.githubusercontent.com/u/16336572?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vadim Shvetsov</b></sub></a><br /><a href=\"#ideas-vadimshvetsov\" title=\"Ideas, Planning, & Feedback\">ü§î</a> <a href=\"https://github.com/testing-library/user-event/commits?author=vadimshvetsov\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=vadimshvetsov\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/9still\"><img src=\"https://avatars0.githubusercontent.com/u/4924760?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Greg Shtilman</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=9still\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=9still\" title=\"Tests\">‚ö†Ô∏è</a> <a href=\"https://github.com/testing-library/user-event/issues?q=author%3A9still\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/rbusquet\"><img src=\"https://avatars1.githubusercontent.com/u/7198302?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ricardo Busquet</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Arbusquet\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=rbusquet\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=rbusquet\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://www.linkedin.com/in/dougbacelar/en\"><img src=\"https://avatars3.githubusercontent.com/u/9267678?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Doug Bacelar</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=dougbacelar\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=dougbacelar\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/kayleighridd\"><img src=\"https://avatars3.githubusercontent.com/u/36446015?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kayleigh Ridd</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Akayleighridd\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=kayleighridd\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=kayleighridd\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://malcolmkee.com\"><img src=\"https://avatars0.githubusercontent.com/u/24528512?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Malcolm Kee</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=malcolm-kee\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=malcolm-kee\" title=\"Documentation\">üìñ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=malcolm-kee\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/kelvinlzhang\"><img src=\"https://avatars3.githubusercontent.com/u/8291294?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>kelvinlzhang</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Akelvinlzhang\" title=\"Bug reports\">üêõ</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/krzysztof-hellostudio\"><img src=\"https://avatars3.githubusercontent.com/u/1942664?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Krzysztof</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Akrzysztof-hellostudio\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/hontas\"><img src=\"https://avatars2.githubusercontent.com/u/1521113?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Pontus Lundin</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=hontas\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=hontas\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://hudochenkov.com/\"><img src=\"https://avatars2.githubusercontent.com/u/654597?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Aleks Hudochenkov</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Ahudochenkov\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/nanivijay\"><img src=\"https://avatars0.githubusercontent.com/u/5945591?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vijay Kumar Otti</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Ananivijay\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"http://tompicton.com\"><img src=\"https://avatars2.githubusercontent.com/u/12588098?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Tom Picton</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Atpict\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=tpict\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=tpict\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://hung.dev\"><img src=\"https://avatars3.githubusercontent.com/u/8603085?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Hung Viet Nguyen</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Anvh95\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"https://nickmccurdy.com/\"><img src=\"https://avatars0.githubusercontent.com/u/927220?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nick McCurdy</b></sub></a><br /><a href=\"#projectManagement-nickmccurdy\" title=\"Project Management\">üìÜ</a> <a href=\"#question-nickmccurdy\" title=\"Answering Questions\">üí¨</a> <a href=\"https://github.com/testing-library/user-event/commits?author=nickmccurdy\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=nickmccurdy\" title=\"Tests\">‚ö†Ô∏è</a> <a href=\"https://github.com/testing-library/user-event/commits?author=nickmccurdy\" title=\"Documentation\">üìñ</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"http://timdeschryver.dev\"><img src=\"https://avatars1.githubusercontent.com/u/28659384?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Tim Deschryver</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=timdeschryver\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ben-dyer\"><img src=\"https://avatars2.githubusercontent.com/u/43922444?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ben Dyer</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=ben-dyer\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=ben-dyer\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/herecydev\"><img src=\"https://avatars1.githubusercontent.com/u/11328618?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Dan Kirkham</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=herecydev\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Johannesklint\"><img src=\"https://avatars3.githubusercontent.com/u/16774845?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Johannesklint</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=Johannesklint\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/juanca\"><img src=\"https://avatars0.githubusercontent.com/u/841084?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Juan Carlos Medina</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=juanca\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=juanca\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/WretchedDade\"><img src=\"https://avatars0.githubusercontent.com/u/17183431?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Dade Cook</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=WretchedDade\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=WretchedDade\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://blog.lourenci.com/\"><img src=\"https://avatars3.githubusercontent.com/u/2339362?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Leandro Lourenci</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=lourenci\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=lourenci\" title=\"Tests\">‚ö†Ô∏è</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/marcosvega91\"><img src=\"https://avatars2.githubusercontent.com/u/5365582?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Marco Moretti</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=marcosvega91\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=marcosvega91\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ybentz\"><img src=\"https://avatars3.githubusercontent.com/u/14811577?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>ybentz</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=ybentz\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=ybentz\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"http://www.lemoncode.net/\"><img src=\"https://avatars2.githubusercontent.com/u/4374977?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nasdan</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3ANasdan\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/JavierMartinz\"><img src=\"https://avatars1.githubusercontent.com/u/1155507?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Javier Mart√≠nez</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=JavierMartinz\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"http://www.visualjerk.de\"><img src=\"https://avatars0.githubusercontent.com/u/28823153?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>J√∂rg Bayreuther</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=visualjerk\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=visualjerk\" title=\"Tests\">‚ö†Ô∏è</a> <a href=\"https://github.com/testing-library/user-event/commits?author=visualjerk\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://ko-fi.com/thislucas\"><img src=\"https://avatars0.githubusercontent.com/u/8645841?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Lucas Bernalte</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=lucbpz\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/maxnewlands\"><img src=\"https://avatars3.githubusercontent.com/u/1304166?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Maxwell Newlands</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=maxnewlands\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=maxnewlands\" title=\"Tests\">‚ö†Ô∏è</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/ph-fritsche\"><img src=\"https://avatars3.githubusercontent.com/u/39068198?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>ph-fritsche</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=ph-fritsche\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=ph-fritsche\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/reywright\"><img src=\"https://avatars3.githubusercontent.com/u/708820?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Rey Wright</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Areywright\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/testing-library/user-event/commits?author=reywright\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/mischnic\"><img src=\"https://avatars1.githubusercontent.com/u/4586894?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Niklas Mischkulnig</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=mischnic\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=mischnic\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"http://pascalduez.me\"><img src=\"https://avatars3.githubusercontent.com/u/335467?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Pascal Duez</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=pascalduez\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"http://malachi.dev\"><img src=\"https://avatars3.githubusercontent.com/u/10888943?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Malachi Willey</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=malwilley\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=malwilley\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://clarkwinters.com\"><img src=\"https://avatars2.githubusercontent.com/u/40615752?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Clark Winters</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=cwinters8\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/lazytype\"><img src=\"https://avatars1.githubusercontent.com/u/840985?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>lazytype</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=lazytype\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=lazytype\" title=\"Tests\">‚ö†Ô∏è</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://www.linkedin.com/in/luis-takahashi/\"><img src=\"https://avatars0.githubusercontent.com/u/19766035?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Lu√≠s Takahashi</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=luistak\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=luistak\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://github.com/jesujcastillom\"><img src=\"https://avatars3.githubusercontent.com/u/7827281?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jesu Castillo</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=jesujcastillom\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=jesujcastillom\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://sarahdayan.dev\"><img src=\"https://avatars1.githubusercontent.com/u/5370675?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sarah Dayan</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=sarahdayan\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"http://saul-mirone.github.io/\"><img src=\"https://avatars0.githubusercontent.com/u/10047788?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Mirone</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3ASaul-Mirone\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/amandapouget\"><img src=\"https://avatars3.githubusercontent.com/u/12855692?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Amanda Pouget</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=amandapouget\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Sonic12040\"><img src=\"https://avatars3.githubusercontent.com/u/21055893?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sonic12040</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=Sonic12040\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=Sonic12040\" title=\"Tests\">‚ö†Ô∏è</a> <a href=\"https://github.com/testing-library/user-event/commits?author=Sonic12040\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/gndelia\"><img src=\"https://avatars1.githubusercontent.com/u/352474?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Gonzalo D'Elia</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=gndelia\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=gndelia\" title=\"Tests\">‚ö†Ô∏è</a> <a href=\"https://github.com/testing-library/user-event/commits?author=gndelia\" title=\"Documentation\">üìñ</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/vasilii-kovalev\"><img src=\"https://avatars0.githubusercontent.com/u/10310491?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vasilii Kovalev</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=vasilii-kovalev\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=vasilii-kovalev\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://www.daleseo.com\"><img src=\"https://avatars1.githubusercontent.com/u/5466341?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Dale Seo</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=daleseo\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"http://www.alex-boyce.me/\"><img src=\"https://avatars.githubusercontent.com/u/4050934?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Alex Boyce</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=curiosity26\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://benadamstyles.com\"><img src=\"https://avatars.githubusercontent.com/u/4380655?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ben Styles</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=benadamstyles\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=benadamstyles\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"http://laurabeatris.com\"><img src=\"https://avatars.githubusercontent.com/u/48022589?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Laura Beatris</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=LauraBeatris\" title=\"Code\">üíª</a> <a href=\"https://github.com/testing-library/user-event/commits?author=LauraBeatris\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/boriscoder\"><img src=\"https://avatars.githubusercontent.com/u/812240?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Boris Serdiuk</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Ajust-boris\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"https://bozdoz.com\"><img src=\"https://avatars.githubusercontent.com/u/1410985?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>bozdoz</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=bozdoz\" title=\"Documentation\">üìñ</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/jKatt\"><img src=\"https://avatars.githubusercontent.com/u/5550790?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jan Kattelans</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/commits?author=jKatt\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/schoeneu\"><img src=\"https://avatars.githubusercontent.com/u/3261341?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>schoeneu</b></sub></a><br /><a href=\"https://github.com/testing-library/user-event/issues?q=author%3Aschoeneu\" title=\"Bug reports\">üêõ</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors][all-contributors] specification.\nContributions of any kind welcome!\n\n## LICENSE\n\nMIT\n\n<!-- prettier-ignore-start -->\n[npm]: https://www.npmjs.com\n[node]: https://nodejs.org\n[build-badge]: https://img.shields.io/github/workflow/status/testing-library/user-event/validate/master?logo=github&style=flat-square\n[build]: https://github.com/testing-library/user-event/actions?query=workflow%3Avalidate\n[coverage-badge]: https://img.shields.io/codecov/c/github/testing-library/user-event.svg?style=flat-square\n[coverage]: https://codecov.io/github/testing-library/user-event\n[version-badge]: https://img.shields.io/npm/v/@testing-library/user-event.svg?style=flat-square\n[package]: https://www.npmjs.com/package/@testing-library/user-event\n[downloads-badge]: https://img.shields.io/npm/dm/@testing-library/user-event.svg?style=flat-square\n[npmtrends]: http://www.npmtrends.com/@testing-library/user-event\n[license-badge]: https://img.shields.io/npm/l/@testing-library/user-event.svg?style=flat-square\n[license]: https://github.com/testing-library/user-event/blob/master/LICENSE\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs]: http://makeapullrequest.com\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/testing-library/user-event/blob/master/other/CODE_OF_CONDUCT.md\n[emojis]: https://github.com/all-contributors/all-contributors#emoji-key\n[all-contributors]: https://github.com/all-contributors/all-contributors\n[all-contributors-badge]: https://img.shields.io/github/all-contributors/testing-library/user-event?color=orange&style=flat-square\n[bugs]: https://github.com/testing-library/user-event/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+sort%3Acreated-desc+label%3Abug\n[requests]: https://github.com/testing-library/user-event/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3Aenhancement\n[good-first-issue]: https://github.com/testing-library/user-event/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3Aenhancement+label%3A%22good+first+issue%22\n<!-- prettier-ignore-end -->\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/testing-library/user-event.git"
  },
  "scripts": {
    "build": "kcd-scripts build",
    "lint": "kcd-scripts lint",
    "setup": "npm install && npm run validate -s",
    "test": "kcd-scripts test",
    "test:debug": "kcd-scripts --inspect-brk test --runInBand",
    "test:update": "npm test -- --updateSnapshot --coverage",
    "typecheck": "kcd-scripts typecheck --build typings",
    "validate": "kcd-scripts validate"
  },
  "typings": "typings/index.d.ts",
  "version": "12.8.3"
}
